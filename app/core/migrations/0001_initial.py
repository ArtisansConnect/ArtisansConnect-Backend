# Generated by Django 5.2 on 2025-05-31 21:29

import core.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('firstName', models.CharField(max_length=100)),
                ('lastName', models.CharField(max_length=100)),
                ('phoneNumber', models.IntegerField()),
                ('role', models.CharField(choices=[('Client', 'Client'), ('Artisan', 'Artisan'), ('Manager', 'Manager'), ('Admin', 'Admin')], default='Client', max_length=100)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('location', models.CharField(choices=[('Constantine', 'Constantine'), ('Algier', 'Algier'), ('Annaba', 'Annaba'), ('Jijel', 'Jijel'), ('Setif', 'Setif')], default='Constantine', max_length=100, null=True)),
                ('roleArtisan', models.CharField(choices=[('Construction', 'Construction'), ('Electricity', 'Electricity'), ('Painting', 'Painting'), ('Flooring', 'Flooring'), ('Hvac', 'Hvac'), ('Plumbing', 'Plumbing'), ('Carpentary', 'Carpentary'), ('Roofing', 'Roofing'), ('Tailing', 'Tailing')], max_length=100, null=True)),
                ('diplomDocument', models.FileField(null=True, upload_to='artisan_documents/')),
                ('rating', models.FloatField(default=5.0, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstructionHouseService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('wallConstructionSurface', models.FloatField(null=True)),
                ('wallDestructionSurface', models.FloatField(null=True)),
                ('cost', models.FloatField(null=True)),
                ('time', models.FloatField(null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ElectricalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('rooms', models.IntegerField()),
                ('surface', models.FloatField()),
                ('smallSpotlight', models.IntegerField(default=0)),
                ('bigSpotlight', models.IntegerField(default=0)),
                ('spotlightQuality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='NORMAL', max_length=100)),
                ('chandelier', models.IntegerField(default=0)),
                ('chandelierQuality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='NORMAL', max_length=100)),
                ('simpleSocket', models.IntegerField(default=0)),
                ('groundSocket', models.IntegerField(default=0)),
                ('socketQuality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='NORMAL', max_length=100)),
                ('elecPanel', models.IntegerField(default=0)),
                ('elecPanelQuality', models.CharField(choices=[('BIG', 'Big'), ('MEDUIM', 'Meduim'), ('SMALL', 'Small')], default='NORMAL', max_length=100)),
                ('simpleSwitch', models.IntegerField(default=0)),
                ('buttonpsSwitch', models.IntegerField(default=0)),
                ('doubleSwitch', models.IntegerField(default=0)),
                ('switchQuality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='NORMAL', max_length=100)),
                ('cableLength', models.FloatField(editable=False, null=True)),
                ('marqueur', models.BooleanField(default=False)),
                ('cost', models.FloatField()),
                ('time', models.FloatField(editable=False, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FacadeService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('surface', models.FloatField()),
                ('finishing_layer', models.CharField(choices=[('Enduit Monocouche', 'Enduit Monocouche'), ('Acrylic Mortar Coating', 'Acrylic Mortar Coating'), ('Lime Plaster', 'Lime Plaster'), ('Ventilated Facade(Porcelain)', 'Ventilated Facade(Porcelain)'), ('Ventilated Facade(Terracotta)', 'Ventilated Facade(Terracotta)')], default='Enduit Monocouche', max_length=100)),
                ('ITE', models.BooleanField(default=False)),
                ('Hydrofuge', models.BooleanField(default=False)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('time', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlooringService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('surface', models.FloatField()),
                ('floorType', models.CharField(choices=[('CARRELAGE', 'Carrelage'), ('PARQUETBOIS', 'ParquetBois'), ('VINYLEPVC', 'VinylePVC'), ('MOQUETTE', 'Moquette')], default='CARRELAGE', max_length=100)),
                ('quality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='POOR', max_length=100)),
                ('cost', models.FloatField(editable=False)),
                ('time', models.FloatField(blank=True, editable=False, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='HvacService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('smallHvac', models.IntegerField()),
                ('mediumHvac', models.IntegerField()),
                ('bigHvac', models.IntegerField()),
                ('cost', models.FloatField(editable=False)),
                ('time', models.FloatField(blank=True, editable=False, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('room_name', models.CharField(max_length=255, null=True)),
                ('content', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('receiver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(max_length=255, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PaintingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('wallSurface', models.FloatField()),
                ('paintingType', models.CharField(choices=[('BASIC', 'Basic'), ('COLORED', 'Colored'), ('DECORATIVE', 'Decorative')], default='BASIC', max_length=100)),
                ('coats', models.IntegerField()),
                ('IswallScrapping', models.BooleanField()),
                ('IsPlastering', models.BooleanField()),
                ('cost', models.FloatField()),
                ('time', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlumbingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('boilerSize', models.CharField(choices=[('small', 'Small'), ('medium', 'Medium'), ('big', 'Big')], default='medium', max_length=100)),
                ('radiatorType', models.CharField(choices=[('COPA_Aluminium', 'COPA Aluminium'), ('GLOBAL_ISEO_350', 'GLOBAL ISEO 350'), ('FONDITAL_ARDENTE_C2', 'FONDITAL ARDENTE C2'), ('Samochauf_SAHD', 'Samochauf SAHD'), ('Sira_Alice_Royal', 'Sira Alice Royal'), ('Helyos_Evo', 'Helyos Evo'), ('Primavera_H500', 'Primavera H500')], default='COPA_Aluminium', max_length=100)),
                ('radiator', models.IntegerField()),
                ('toilet', models.IntegerField()),
                ('toileType', models.CharField(choices=[('Basic-Ceramic', 'Basic Ceramic'), ('One-Piece', 'One-Piece'), ('Wall-Hung', 'Wall-Hung')], default='One-Piece', max_length=100)),
                ('washbasin', models.IntegerField()),
                ('washbasinType', models.CharField(choices=[('Pedestal', 'Pedestal'), ('Wall-Mounted', 'Wall-Mounted'), ('Countertop', 'Countertop')], default='Pedestal', max_length=100)),
                ('bathhub', models.IntegerField()),
                ('bathhubType', models.CharField(choices=[('Standard', 'Standard'), ('Luxury', 'Luxury')], default='Standard', max_length=100)),
                ('showerCabin', models.IntegerField()),
                ('showerCabinType', models.CharField(choices=[('Basic_Enclosure', 'Basic Enclosure'), ('Luxury_Enclosure', 'Luxury Enclosure')], default='Basic_Enclosure', max_length=100)),
                ('Bidet', models.IntegerField()),
                ('BidetType', models.CharField(choices=[('Bidet-Ceramic', 'Bidet-Ceramic'), ('Bidet-Mixer-Tap', 'Bidet-Mixer-Tap'), ('Wall-Hung', 'Wall-Hung')], default='Bidet-Ceramic', max_length=100)),
                ('waterHeater', models.IntegerField()),
                ('waterHeaterType', models.CharField(choices=[('Electric-30liters', 'Electric-30liters'), ('Electric-50liters', 'Electric-50liters'), ('GAS-6liters', 'GAS-6liters'), ('GAS-11liters', 'GAS-11liters')], default='GAS-6liters', max_length=100)),
                ('sinkTypeQuality', models.CharField(choices=[('POOR', 'Poor'), ('NORMAL', 'Normal'), ('HIGH', 'High')], default='poor', max_length=100)),
                ('sinkCategorie', models.CharField(choices=[('single', 'single'), ('double', 'double')], default='single', max_length=100)),
                ('cost', models.FloatField()),
                ('time', models.FloatField()),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'PENDING'), ('REJECTED', 'REJECTED'), ('ACCEPTED', 'ACCEPTED')], default='PENDING', max_length=100)),
                ('creation_date', models.DateField(auto_now_add=True, null=True)),
                ('construction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.constructionhouseservice')),
                ('electrical', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.electricalservice')),
                ('facade', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.facadeservice')),
                ('flooring', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.flooringservice')),
                ('hvac', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.hvacservice')),
                ('painting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.paintingservice')),
                ('plumbing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.plumbingservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Planification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField(editable=False)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('project', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.project')),
            ],
        ),
        migrations.CreateModel(
            name='RoofingService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('surface', models.FloatField(validators=[core.models.validate_roof_surface])),
                ('roofType', models.CharField(choices=[('CanalTilesWithInsulation', 'Canal tiles with insulation'), ('CanalTilesWithMortar', 'Canal tiles with mortar'), ('RomanTiles', 'Roman tiles with waterproofing'), ('SlateRoof', 'Slate roof')], default='CanalTilesWithInsulation', max_length=100)),
                ('time', models.FloatField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='roofing',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.roofingservice'),
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('content', models.TextField()),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('tags', models.ManyToManyField(null=True, to='core.tags')),
            ],
        ),
        migrations.CreateModel(
            name='WindowsDoorsService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('Selected', 'Selected'), ('NonSelected', 'NonSelected')], default='NonSelected', max_length=100)),
                ('rank', models.PositiveIntegerField(default=0, null=True)),
                ('windows', models.IntegerField(validators=[core.models.validate_window])),
                ('windowsTypes', models.CharField(choices=[('PVC', 'Pvc'), ('Aluminum', 'Aluminum'), ('Wood', 'wood')], default='PVC', max_length=100)),
                ('doors', models.IntegerField(validators=[core.models.validate_door])),
                ('doorsTypes', models.CharField(choices=[('PVC', 'PVC'), ('Aluminum', 'Aluminum'), ('StandardWood', 'StandardWood'), ('HighEndWood', 'HighEndWood')], default='pvc', max_length=100)),
                ('time', models.FloatField(blank=True, null=True)),
                ('cost', models.FloatField(blank=True, null=True)),
                ('start_date', models.DateTimeField(null=True)),
                ('end_date', models.DateTimeField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='project',
            name='carpentary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.windowsdoorsservice'),
        ),
    ]
